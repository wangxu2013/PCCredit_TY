<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cardpay.pccredit.report.dao.AcctStatisticalDao">
	
	<resultMap id="ResultMap" type="com.cardpay.pccredit.report.model.AcctStatistical">
		<result property="rowIndex" column="row_index" />
		<result property="name" column="name" />
		<result property="id" column="id" />
		<result property="bCreditExtensionAmount" column="b_credit_extension_amount" />
		<result property="bActivateExtensionAmount" column="b_activate_extension_amount" />
		<result property="bOverdraftPrincipal" column="b_overdraft_principal" />
		<result property="bOverdraftAmount" column="b_overdraft_amount" />
		<result property="bOverdraftPrincipalAvg" column="b_overdraft_principal_avg" />
		<result property="bOverdraftAmountAvg" column="b_overdraft_amount_avg" />
		<result property="bBadOverdraftPrincipal" column="b_bad_overdraft_principal" />
		<result property="bBadRate" column="b_bad_rate" />
		
		<result property="rCreditExtensionAmount" column="r_credit_extension_amount" />
		<result property="rActivateExtensionAmount" column="r_activate_extension_amount" />
		<result property="rOverdraftPrincipal" column="r_overdraft_principal" />
		<result property="rOverdraftAmount" column="r_overdraft_amount" />
		<result property="rOverdraftPrincipalAvg" column="r_overdraft_principal_avg" />
		<result property="rOverdraftAmountAvg" column="r_overdraft_amount_avg" />
		<result property="rBadOverdraftPrincipal" column="r_bad_overdraft_principal" />
		<result property="rBadRate" column="r_bad_rate" />
		
		<result property="addCreditExtensionAmount" column="add_credit_extension_amount" />
		<result property="addActivateExtensionAmount" column="add_activate_extension_amount" />
		<result property="addOverdraftPrincipal" column="add_overdraft_principal" />
		<result property="addOverdraftAmount" column="add_overdraft_amount" />
		<result property="addOverdraftPrincipalAvg" column="add_overdraft_principal_avg" />
		<result property="addOverdraftAmountAvg" column="add_overdraft_amount_avg" />
		<result property="addBadOverdraftPrincipal" column="add_bad_overdraft_principal" />
		<result property="addBadRate" column="add_bad_rate" />
	</resultMap>
	
	<select id="getOrgAcctStatistical" resultMap="ResultMap"
			parameterType="com.cardpay.pccredit.report.filter.StatisticalFilter">
		select a.*,
	       rownum row_index,
	       decode(a.b_overdraft_principal,
	              0,
	              0,
	              a.b_bad_overdraft_principal / a.b_overdraft_principal * 100) as b_bad_rate,
	       decode(a.r_overdraft_principal,
	              0,
	              0,
	              a.r_bad_overdraft_principal / a.r_overdraft_principal * 100) as r_bad_rate,
	       
	       to_char((r_credit_extension_amount - b_credit_extension_amount)) add_credit_extension_amount,
	       to_char((r_activate_extension_amount - b_activate_extension_amount)) add_activate_extension_amount,
	       to_char((r_overdraft_principal - b_overdraft_principal)) add_overdraft_principal,
	       to_char((r_overdraft_amount - b_overdraft_amount)) add_overdraft_amount,
	       to_char((r_overdraft_principal_avg - b_overdraft_principal_avg)) add_overdraft_principal_avg,
	       to_char((r_overdraft_amount_avg - b_overdraft_amount_avg)) add_overdraft_amount_avg,
	       to_char((r_bad_overdraft_principal - b_bad_overdraft_principal)) add_bad_overdraft_principal,
	       
	       decode(r_overdraft_principal - b_overdraft_principal,
	              0,
	              0,
	              (r_bad_overdraft_principal - b_bad_overdraft_principal) /
	              (r_overdraft_principal - b_overdraft_principal) * 100) as add_bad_rate
	
	  from (select result_date.org_id as id,
	               result_date.org_name as name,
	               to_char(sum(b_credit_extension_amount) / 1000000) as b_credit_extension_amount,
               to_char(sum(b_activate_extension_amount) / 1000000) as b_activate_extension_amount,
               to_char(sum(b_overdraft_principal) / 1000000) as b_overdraft_principal,
               to_char(sum(b_overdraft_amount) / 1000000) as b_overdraft_amount,
               to_char(sum(b_overdraft_principal_avg) / 1000000) as b_overdraft_principal_avg,
               to_char(sum(b_overdraft_amount_avg) / 1000000) as b_overdraft_amount_avg,
               to_char(sum(b_bad_overdraft_principal) / 1000000) as b_bad_overdraft_principal,
               
               to_char(sum(r_credit_extension_amount) / 1000000) as r_credit_extension_amount,
               to_char(sum(r_activate_extension_amount) / 1000000) as r_activate_extension_amount,
               to_char(sum(r_overdraft_principal) / 1000000) as r_overdraft_principal,
               to_char(sum(r_overdraft_amount) / 1000000) as r_overdraft_amount,
               to_char(sum(r_overdraft_principal_avg) / 1000000) as r_overdraft_principal_avg,
               to_char(sum(r_overdraft_amount_avg) / 1000000) as r_overdraft_amount_avg,
               to_char(sum(r_bad_overdraft_principal) / 1000000) as r_bad_overdraft_principal
	          from (select user_info.org_id,
	                       user_info.org_name,
	                       nvl(basic_date_info.credit_extension_amount, 0) as b_credit_extension_amount,
	                       nvl(basic_date_info.activate_extension_amount, 0) as b_activate_extension_amount,
	                       nvl(basic_date_info.overdraft_principal, 0) as b_overdraft_principal,
	                       nvl(basic_date_info.overdraft_amount, 0) as b_overdraft_amount,
	                       nvl(basic_date_info.overdraft_principal_avg, 0) as b_overdraft_principal_avg,
	                       nvl(basic_date_info.overdraft_amount_avg, 0) as b_overdraft_amount_avg,
	                       nvl(basic_date_info.bad_overdraft_principal, 0) as b_bad_overdraft_principal,
	                       
	                       nvl(report_date_info.credit_extension_amount, 0) as r_credit_extension_amount,
	                       nvl(report_date_info.activate_extension_amount, 0) as r_activate_extension_amount,
	                       nvl(report_date_info.overdraft_principal, 0) as r_overdraft_principal,
	                       nvl(report_date_info.overdraft_amount, 0) as r_overdraft_amount,
	                       nvl(report_date_info.overdraft_principal_avg, 0) as r_overdraft_principal_avg,
	                       nvl(report_date_info.overdraft_amount_avg, 0) as r_overdraft_amount_avg,
	                       nvl(report_date_info.bad_overdraft_principal, 0) as r_bad_overdraft_principal
	                  from (select sys_org.name     as org_name,
	                               sys_org.id       as org_id,
	                               sys_dep.name     as dep_name,
	                               sys_dep.id       as dep_id,
	                               usr.id           as user_id,
	                               usr.display_name
	                          from (select org.name,
	                                       org.id,
	                                       level lev,
	                                       decode(connect_by_isleaf, 1, 'Y', 'N') is_leaf
	                                  from SYS_ORGANIZATION org
	                                 where is_deleted = 0 /*未删除*/
	                                   and level = 3 /*只查支行*/
	                                 start with parent_id is null
	                                connect by prior id = parent_id) sys_org
	                         inner join sys_department sys_dep
	                            on sys_org.id = sys_dep.org_id
	                         inner join sys_dept_user sys_dept_usr
	                            on sys_dep.id = sys_dept_usr.dept_id
	                         inner join sys_user usr
	                            on sys_dept_usr.user_id = usr.id
	                           and usr.user_type = 1 /*客户经理*/
	                        ) user_info
	                
	                  left join (select t.customer_manager_id as manager_id,
	                                   sum(nvl(t.credit_extension_amount, 0)) as credit_extension_amount /*授信总额度*/,
	                                   sum(nvl(t.activate_extension_amount, 0)) as activate_extension_amount /*激活总额度*/,
	                                   sum(nvl(t.overdraft_principal, 0)) as overdraft_principal /*透支本金额度*/,
	                                   sum(nvl(t.overdraft_amount, 0)) as overdraft_amount /*透支总额度*/,
	                                   sum(nvl(t.overdraft_principal_average, 0)) as overdraft_principal_avg /*年日均透支本金*/,
	                                   sum(nvl(t.overdraft_amount_average, 0)) as overdraft_amount_avg /*年日均透支总余额*/,
	                                   sum(nvl(t.bad_overdraft_principal, 0)) as bad_overdraft_principal /*不良透支本金*/
	                              from statistical_table t
	                             where t.created_date <![CDATA[ <= ]]> #{basicDate}
	                               and t.product_id=#{productId}
	                             group by t.customer_manager_id) basic_date_info
	                    on user_info.user_id = basic_date_info.manager_id
	                
	                  left join (select t.customer_manager_id as manager_id,
	                                   sum(nvl(t.credit_extension_amount, 0)) as credit_extension_amount /*授信总额度*/,
	                                   sum(nvl(t.activate_extension_amount, 0)) as activate_extension_amount /*激活总额度*/,
	                                   sum(nvl(t.overdraft_principal, 0)) as overdraft_principal /*透支本金额度*/,
	                                   sum(nvl(t.overdraft_amount, 0)) as overdraft_amount /*透支总额度*/,
	                                   sum(nvl(t.overdraft_principal_average, 0)) as overdraft_principal_avg /*年日均透支本金*/,
	                                   sum(nvl(t.overdraft_amount_average, 0)) as overdraft_amount_avg /*年日均透支总余额*/,
	                                   sum(nvl(t.bad_overdraft_principal, 0)) as bad_overdraft_principal /*不良透支本金*/
	                              from statistical_table t
	                             where t.created_date <![CDATA[ <= ]]> #{reportDate}
	                               and t.product_id=#{productId}
	                             group by t.customer_manager_id) report_date_info
	                    on user_info.user_id = report_date_info.manager_id) result_date
	        
	         group by result_date.org_id, result_date.org_name) a

	</select>
	
	<select id="getManagerAcctStatistical" resultMap="ResultMap"
			parameterType="com.cardpay.pccredit.report.filter.StatisticalFilter">
		select a.*,
	       rownum row_index,
	       decode(a.b_overdraft_principal,
	              0,
	              0,
	              a.b_bad_overdraft_principal / a.b_overdraft_principal * 100) as b_bad_rate,
	       decode(a.r_overdraft_principal,
	              0,
	              0,
	              a.r_bad_overdraft_principal / a.r_overdraft_principal * 100) as r_bad_rate,
	       
	       (r_credit_extension_amount - b_credit_extension_amount) add_credit_extension_amount,
	       (r_activate_extension_amount - b_activate_extension_amount) add_activate_extension_amount,
	       (r_overdraft_principal - b_overdraft_principal) add_overdraft_principal,
	       (r_overdraft_amount - b_overdraft_amount) add_overdraft_amount,
	       (r_overdraft_principal_avg - b_overdraft_principal_avg) add_overdraft_principal_avg,
	       (r_overdraft_amount_avg - b_overdraft_amount_avg) add_overdraft_amount_avg,
	       (r_bad_overdraft_principal - b_bad_overdraft_principal) add_bad_overdraft_principal,
	       
	       decode(r_overdraft_principal - b_overdraft_principal,
	              0,
	              0,
	              (r_bad_overdraft_principal - b_bad_overdraft_principal) /
	              (r_overdraft_principal - b_overdraft_principal) * 100) as add_bad_rate
	
	  from (select result_date.user_id as id,
	               result_date.user_name as name,
	               sum(b_credit_extension_amount) / 1000000 as b_credit_extension_amount,
	               sum(b_activate_extension_amount) / 1000000 as b_activate_extension_amount,
	               sum(b_overdraft_principal) / 1000000 as b_overdraft_principal,
	               sum(b_overdraft_amount) / 1000000 as b_overdraft_amount,
	               sum(b_overdraft_principal_avg) / 1000000 as b_overdraft_principal_avg,
	               sum(b_overdraft_amount_avg) / 1000000 as b_overdraft_amount_avg,
	               sum(b_bad_overdraft_principal) / 1000000 as b_bad_overdraft_principal,
	               
	               sum(r_credit_extension_amount) / 1000000 as r_credit_extension_amount,
	               sum(r_activate_extension_amount) / 1000000 as r_activate_extension_amount,
	               sum(r_overdraft_principal) / 1000000 as r_overdraft_principal,
	               sum(r_overdraft_amount) / 1000000 as r_overdraft_amount,
	               sum(r_overdraft_principal_avg) / 1000000 as r_overdraft_principal_avg,
	               sum(r_overdraft_amount_avg) / 1000000 as r_overdraft_amount_avg,
	               sum(r_bad_overdraft_principal) / 1000000 as r_bad_overdraft_principal
	          from (select user_info.user_id,
	                       user_info.user_name,
	                       nvl(basic_date_info.credit_extension_amount, 0) as b_credit_extension_amount,
	                       nvl(basic_date_info.activate_extension_amount, 0) as b_activate_extension_amount,
	                       nvl(basic_date_info.overdraft_principal, 0) as b_overdraft_principal,
	                       nvl(basic_date_info.overdraft_amount, 0) as b_overdraft_amount,
	                       nvl(basic_date_info.overdraft_principal_avg, 0) as b_overdraft_principal_avg,
	                       nvl(basic_date_info.overdraft_amount_avg, 0) as b_overdraft_amount_avg,
	                       nvl(basic_date_info.bad_overdraft_principal, 0) as b_bad_overdraft_principal,
	                       
	                       nvl(report_date_info.credit_extension_amount, 0) as r_credit_extension_amount,
	                       nvl(report_date_info.activate_extension_amount, 0) as r_activate_extension_amount,
	                       nvl(report_date_info.overdraft_principal, 0) as r_overdraft_principal,
	                       nvl(report_date_info.overdraft_amount, 0) as r_overdraft_amount,
	                       nvl(report_date_info.overdraft_principal_avg, 0) as r_overdraft_principal_avg,
	                       nvl(report_date_info.overdraft_amount_avg, 0) as r_overdraft_amount_avg,
	                       nvl(report_date_info.bad_overdraft_principal, 0) as r_bad_overdraft_principal
	                  from (select sys_org.name     as org_name,
	                               sys_org.id       as org_id,
	                               sys_dep.name     as dep_name,
	                               sys_dep.id       as dep_id,
	                               usr.id           as user_id,
	                               usr.display_name as user_name
	                          from (select org.name,
	                                       org.id,
	                                       level lev,
	                                       decode(connect_by_isleaf, 1, 'Y', 'N') is_leaf
	                                  from SYS_ORGANIZATION org
	                                 where is_deleted = 0 /*未删除*/
	                                   and level = 3 /*只查支行*/
	                                 start with parent_id is null
	                                connect by prior id = parent_id) sys_org
	                         inner join sys_department sys_dep
	                            on sys_org.id = sys_dep.org_id
	                         inner join sys_dept_user sys_dept_usr
	                            on sys_dep.id = sys_dept_usr.dept_id
	                         inner join sys_user usr
	                            on sys_dept_usr.user_id = usr.id
	                           and usr.user_type = 1 /*客户经理*/
	                        ) user_info
	                
	                  left join (select t.customer_manager_id as manager_id,
	                                   sum(nvl(t.credit_extension_amount, 0)) as credit_extension_amount /*授信总额度*/,
	                                   sum(nvl(t.activate_extension_amount, 0)) as activate_extension_amount /*激活总额度*/,
	                                   sum(nvl(t.overdraft_principal, 0)) as overdraft_principal /*透支本金额度*/,
	                                   sum(nvl(t.overdraft_amount, 0)) as overdraft_amount /*透支总额度*/,
	                                   sum(nvl(t.overdraft_principal_average, 0)) as overdraft_principal_avg /*年日均透支本金*/,
	                                   sum(nvl(t.overdraft_amount_average, 0)) as overdraft_amount_avg /*年日均透支总余额*/,
	                                   sum(nvl(t.bad_overdraft_principal, 0)) as bad_overdraft_principal /*不良透支本金*/
	                              from statistical_table t
	                             where t.created_date <![CDATA[ <= ]]> #{basicDate}
	                               and t.product_id=#{productId}
	                             group by t.customer_manager_id) basic_date_info
	                    on user_info.user_id = basic_date_info.manager_id
	                
	                  left join (select t.customer_manager_id as manager_id,
	                                   sum(nvl(t.credit_extension_amount, 0)) as credit_extension_amount /*授信总额度*/,
	                                   sum(nvl(t.activate_extension_amount, 0)) as activate_extension_amount /*激活总额度*/,
	                                   sum(nvl(t.overdraft_principal, 0)) as overdraft_principal /*透支本金额度*/,
	                                   sum(nvl(t.overdraft_amount, 0)) as overdraft_amount /*透支总额度*/,
	                                   sum(nvl(t.overdraft_principal_average, 0)) as overdraft_principal_avg /*年日均透支本金*/,
	                                   sum(nvl(t.overdraft_amount_average, 0)) as overdraft_amount_avg /*年日均透支总余额*/,
	                                   sum(nvl(t.bad_overdraft_principal, 0)) as bad_overdraft_principal /*不良透支本金*/
	                              from statistical_table t
	                             where t.created_date <![CDATA[ <= ]]> #{reportDate}
	                               and t.product_id=#{productId}
	                             group by t.customer_manager_id) report_date_info
	                    on user_info.user_id = report_date_info.manager_id) result_date
	        
	         group by result_date.user_id, result_date.user_name) a

	</select>
</mapper>
