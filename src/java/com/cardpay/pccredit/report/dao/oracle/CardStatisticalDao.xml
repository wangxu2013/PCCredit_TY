<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cardpay.pccredit.report.dao.CardStatisticalDao">
	<resultMap id="ResultMap" type="com.cardpay.pccredit.report.model.CardStatistical">
		<result property="rowIndex" column="row_index" />
		<result property="name" column="name" />
		<result property="id" column="id" />
		<result property="bSendCardNumber" column="b_send_card_number" />
		<result property="bAcceptCardNumber" column="b_accept_card_number" />
		<result property="bActivateCardNumber" column="b_activate_card_number" />
		<result property="bNoActivateCardNumber" column="b_no_activate_card_number" />
		<result property="bActiveRate" column="b_active_rate" />
		<result property="rSendCardNumber" column="r_send_card_number" />
		<result property="rAcceptCardNumber" column="r_accept_card_number" />
		<result property="rActivateCardNumber" column="r_activate_card_number" />
		<result property="rNoActivateCardNumber" column="r_no_activate_card_number" />
		<result property="rActiveRate" column="r_active_rate" />
		<result property="addSendCardNumber" column="add_send_card_number" />
		<result property="addAcceptCardNumber" column="add_accept_card_number" />
		<result property="addActivateCardNumber" column="add_activate_card_number" />
		<result property="addNoActivateCardNumber" column="add_no_activate_card_number" />
		<result property="addActiveRate" column="add_active_rate" />
	</resultMap>
	
	<select id="getOrgCardStatistical" resultMap="ResultMap"
			parameterType="com.cardpay.pccredit.report.filter.StatisticalFilter">
	select a.*,
	   rownum row_index,
       decode(a.b_send_card_number,
              0,
              0,
              a.b_activate_card_number / a.b_send_card_number * 100) as b_active_rate,
       decode(a.r_send_card_number,
              0,
              0,
              a.r_activate_card_number / a.r_send_card_number * 100) as r_active_rate,
       
       (r_send_card_number - b_send_card_number) add_send_card_number,
       (r_accept_card_number - b_accept_card_number) add_accept_card_number,
       (r_activate_card_number - b_activate_card_number) add_activate_card_number,
       (r_no_activate_card_number - b_no_activate_card_number) add_no_activate_card_number,
       decode(r_send_card_number - b_send_card_number,
              0,
              0,
              (r_activate_card_number - b_activate_card_number) / (r_send_card_number - b_send_card_number) * 100) as add_active_rate

  from (select result_date.org_id as id,
               result_date.org_name as name,
               sum(b_send_card_number) as b_send_card_number,
               sum(b_accept_card_number) as b_accept_card_number,
               sum(b_activate_card_number) as b_activate_card_number,
               sum(b_send_card_number) - sum(b_activate_card_number) as b_no_activate_card_number,
               
               sum(r_send_card_number) as r_send_card_number,
               sum(r_accept_card_number) as r_accept_card_number,
               sum(r_activate_card_number) as r_activate_card_number,
               sum(r_send_card_number) - sum(r_activate_card_number) r_no_activate_card_number
          from (select user_info.org_id,
                       user_info.org_name,
                       nvl(basic_date_info.send_card_number, 0) as b_send_card_number,
                       nvl(basic_date_info.accept_card_number, 0) as b_accept_card_number,
                       nvl(basic_date_info.activate_card_number, 0) as b_activate_card_number,
                       nvl(report_date_info.send_card_number, 0) as r_send_card_number,
                       nvl(report_date_info.accept_card_number, 0) as r_accept_card_number,
                       nvl(report_date_info.activate_card_number, 0) as r_activate_card_number
                  from (select sys_org.name     as org_name,
                               sys_org.id       as org_id,
                               sys_dep.name     as dep_name,
                               sys_dep.id       as dep_id,
                               usr.id           as user_id,
                               usr.display_name
                          from (select org.name,
                                       org.id,
                                       level lev,
                                       decode(connect_by_isleaf, 1, 'Y', 'N') is_leaf
                                  from SYS_ORGANIZATION org
                                 where is_deleted = 0 /*未删除*/
                                   and level = 3 /*只查支行*/
                                 start with parent_id is null
                                connect by prior id = parent_id) sys_org
                         inner join sys_department sys_dep
                            on sys_org.id = sys_dep.org_id
                         inner join sys_dept_user sys_dept_usr
                            on sys_dep.id = sys_dept_usr.dept_id
                         inner join sys_user usr
                            on sys_dept_usr.user_id = usr.id
                           and usr.user_type = 1 /*客户经理*/
                        ) user_info
                
                  left join (select t.customer_manager_id as manager_id,
                                   sum(nvl(t.send_card_number, 0)) as send_card_number,
                                   sum(nvl(t.accept_card_number, 0)) as accept_card_number,
                                   sum(nvl(t.activate_card_number, 0)) as activate_card_number
                              from statistical_table t
                             where t.created_date <![CDATA[ <= ]]> #{basicDate}
                               and t.product_id=#{productId}
                             group by t.customer_manager_id) basic_date_info
                    on user_info.user_id = basic_date_info.manager_id
                
                  left join (select t.customer_manager_id as manager_id,
                                   sum(nvl(t.send_card_number, 0)) as send_card_number,
                                   sum(nvl(t.accept_card_number, 0)) as accept_card_number,
                                   sum(nvl(t.activate_card_number, 0)) as activate_card_number
                              from statistical_table t
                             where t.created_date <![CDATA[ <= ]]> #{reportDate}
                               and t.product_id=#{productId}
                             group by t.customer_manager_id) report_date_info
                    on user_info.user_id = report_date_info.manager_id) result_date
        
         group by result_date.org_id, result_date.org_name) a
	</select>
	
	<select id="getManagerCardStatistical" resultMap="ResultMap"
			parameterType="com.cardpay.pccredit.report.filter.StatisticalFilter">
	select a.*,
       rownum row_index,
       decode(a.b_send_card_number,
              0,
              0,
              a.b_activate_card_number / a.b_send_card_number * 100) as b_active_rate,
       decode(a.r_send_card_number,
              0,
              0,
              a.r_activate_card_number / a.r_send_card_number * 100) as r_active_rate,
       
       (r_send_card_number - b_send_card_number) add_send_card_number,
       (r_accept_card_number - b_accept_card_number) add_accept_card_number,
       (r_activate_card_number - b_activate_card_number) add_activate_card_number,
       (r_no_activate_card_number - b_no_activate_card_number) add_no_activate_card_number

  from (select result_date.user_id as id,
               result_date.user_name as name,
               sum(b_send_card_number) as b_send_card_number,
               sum(b_accept_card_number) as b_accept_card_number,
               sum(b_activate_card_number) as b_activate_card_number,
               sum(b_send_card_number) - sum(b_activate_card_number) as b_no_activate_card_number,
               
               sum(r_send_card_number) as r_send_card_number,
               sum(r_accept_card_number) as r_accept_card_number,
               sum(r_activate_card_number) as r_activate_card_number,
               sum(r_send_card_number) - sum(r_activate_card_number) r_no_activate_card_number
          from (select user_info.user_id,
                       user_info.user_name,
                       nvl(basic_date_info.send_card_number, 0) as b_send_card_number,
                       nvl(basic_date_info.accept_card_number, 0) as b_accept_card_number,
                       nvl(basic_date_info.activate_card_number, 0) as b_activate_card_number,
                       nvl(report_date_info.send_card_number, 0) as r_send_card_number,
                       nvl(report_date_info.accept_card_number, 0) as r_accept_card_number,
                       nvl(report_date_info.activate_card_number, 0) as r_activate_card_number
                  from (select sys_org.name     as org_name,
                               sys_org.id       as org_id,
                               sys_dep.name     as dep_name,
                               sys_dep.id       as dep_id,
                               usr.id           as user_id,
                               usr.display_name as user_name
                          from (select org.name,
                                       org.id,
                                       level lev,
                                       decode(connect_by_isleaf, 1, 'Y', 'N') is_leaf
                                  from SYS_ORGANIZATION org
                                 where is_deleted = 0 /*未删除*/
                                   and level = 3 /*只查支行*/
                                 start with parent_id is null
                                connect by prior id = parent_id) sys_org
                         inner join sys_department sys_dep
                            on sys_org.id = sys_dep.org_id
                         inner join sys_dept_user sys_dept_usr
                            on sys_dep.id = sys_dept_usr.dept_id
                         inner join sys_user usr
                            on sys_dept_usr.user_id = usr.id
                           and usr.user_type = 1 /*客户经理*/
                        ) user_info
                
                  left join (select t.customer_manager_id as manager_id,
                                   sum(nvl(t.send_card_number, 0)) as send_card_number,
                                   sum(nvl(t.accept_card_number, 0)) as accept_card_number,
                                   sum(nvl(t.activate_card_number, 0)) as activate_card_number
                              from statistical_table t
                             where t.created_date <![CDATA[ <= ]]> #{basicDate}
                               and t.product_id=#{productId}
                             group by t.customer_manager_id) basic_date_info
                    on user_info.user_id = basic_date_info.manager_id
                
                  left join (select t.customer_manager_id as manager_id,
                                   sum(nvl(t.send_card_number, 0)) as send_card_number,
                                   sum(nvl(t.accept_card_number, 0)) as accept_card_number,
                                   sum(nvl(t.activate_card_number, 0)) as activate_card_number
                              from statistical_table t
                             where t.created_date <![CDATA[ <= ]]> #{reportDate}
                               and t.product_id=#{productId}
                             group by t.customer_manager_id) report_date_info
                    on user_info.user_id = report_date_info.manager_id) result_date
        
         group by result_date.user_id, result_date.user_name) a
	</select>
</mapper>
